{"version":3,"sources":["logo.svg","components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","onSearchChange","e","setState","searchField","target","value","state","string","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","logo","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAAe,MAA0B,iCCI5BA,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIC,UAAU,aACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,MCLLI,G,YAAO,SAAAC,GAAK,OACrB,sBAAKJ,UAAU,iBAAf,UACI,qBAAKK,IAAI,UACLL,UAAU,WACVM,IAAK,yBAA2BF,EAAMG,QAAQC,GAAK,2BAEvD,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCPbC,EAAW,SAAAP,GAAK,OACzB,qBAAKJ,UAAU,YAAf,SACKI,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCgE3CM,E,kDA9Df,aAAe,IAAD,8BACZ,gBAqCAC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SApCvC,EAAKC,MAAQ,CACXC,OAAQ,cACRJ,YAAY,GACZN,SAAU,IANA,E,gEAgCb,IAAD,OACEW,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACL,SAAUe,S,+BAQ9B,IAAD,EACyBC,KAAKP,MAA9BT,EADA,EACAA,SAAUM,EADV,EACUA,YACXW,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASd,EAAYa,kBAEpG,OACE,sBAAK/B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKM,IAAK2B,EAAMjC,UAAU,WAAWK,IAAI,WAEzC,kDAGA,cAAC,EAAD,CAAWP,YAAY,SAASC,aAAc6B,KAAKb,iBACnD,cAAC,EAAD,CAAUH,SAAUiB,EAAkBpB,KAAK,iB,GAzDnCyB,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2af4ba60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className='search-box'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n        // onChange={e => this.setState({searchField: e.target.value})}\r\n        />\r\n);","import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster'\r\n            className='card-img'\r\n            src={'https://robohash.org/$' + props.monster.id + '?set=set1&size=100x100'}\r\n            />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from './../card/card.component';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster => <Card key={monster.id} monster={monster} />)}\r\n    </div>\r\n);\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport { CardList } from './components/card-list/card-list.component';\n\n//function App() {\nclass App extends Component{\nconstructor() {\n  super();\n\n  this.state = {\n    string: 'Hello world',\n    searchField:'',\n    monsters: [\n      // {\n      //   name: 'Dracula',\n      //   id:'m1'\n      // },\n      // {\n      //   name: 'Vador',\n      //   id:'m2'\n      // },\n      // {\n      //   name: 'Franckenstein',\n      //   id:'m3'\n      // },\n      // {\n      //   name: 'Stitch',\n      //   id:'m4'\n      // },\n      // {\n      //   name: 'Zombie',\n      //   id:'m5'\n      // }\n    ]\n  }\n}\n\ncomponentDidMount()\n{\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}));\n}\n\n  onSearchChange = (e) => {\n    this.setState({searchField: e.target.value});\n    // console.log(e.target.value);\n  };\n\n  render (){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n          <h1>Monsters rolodex</h1>\n          {/* <SearchBox placeholder='Search' handleChange={e => this.onSearchChange(e) } /> */} \n          {/* permet de maintenir l'Ã©criture classique de la methode */}\n          <SearchBox placeholder='Search' handleChange={this.onSearchChange} />\n          <CardList monsters={filteredMonsters} name=\"hello\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}